package com.capgemini.fraudanalyser;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.Set;

public class FraudAnalyser {

	private Set listOfTransactions;
	private int[] suspects={542,1052,2103};
	private final int suspectUser1=542, suspectUser2=1052, suspectUser3=2103;
	private final int honestUser1=101, honestUser2=606;
	//private Set users;
	//private Set dates;
	
	public static Set getUniqueUsers(ArrayList<Transaction> transactionsForAnalize){
		Set users=new HashSet<>();
		for(int i=0;i<transactionsForAnalize.size();i++){
			users.add(transactionsForAnalize.get(i).getUserID());
		}
		
		return users;
	}
	
	public static Set getUniqueDates(ArrayList<Transaction> transactionsForAnalize){
		Set dates=new HashSet<>();
		for(int i=0;i<transactionsForAnalize.size();i++){
			dates.add(transactionsForAnalize.get(i).getDateOfTransfer());
		}
		
		return dates;
	}
	
	public Set generateListOfSuspectTransactions(ArrayList<Transaction> transactionsForAnalize){
		Set listOfSuspectTransactions=new HashSet<>();
		for(Transaction t:transactionsForAnalize){
			if(isUserAboveSuspicion(t.getUserID())){
				transactionsForAnalize.remove(t);
			}
			
		}
		// import list
		// remove honest users
		// create empty set of suspects
		// check conditions
		// add suspects to list
		// return
		
		
		return listOfTransactions;
	}
	
	public boolean isUserAboveSuspicion(int userID){
		if(userID==101||userID==606){
			return true;
		}
		else
			return false;
	}
	
	public boolean isUserSuspectForSure(int userID){
		for(int i=0;i<suspects.length;i++){
			if(userID==suspects[i]){
				return true;
			}
		}
		return false;
		
	}
	
	
}
