package com.capgemini.fibonacci;

/**
 * Fibonacci returns value of given element of Fibonacci series given by int.
 * Returns 1 for first and second elements of Fibonacci series. Cannot compute
 * results for elements' number beyond 92.
 * 
 * @author BOWROBEL
 *
 */

public class Fibonacci {

	/**
	 * returns value of given element of Fibonacci series, checking if value can
	 * be computed first
	 * 
	 * @param seriesElementNumber
	 * @return long value of Fibonacci series for given element
	 */
	public static long evaluateFib(int seriesElementNumber) {
		long result = evaluateFib(seriesElementNumber);
		if (result < 0) {
			throw new ResultOutOfRangeException("Result of this operation is out of range");
		}
		return result;
	}

	/**
	 * computes value of Fibonacci series element
	 * 
	 * @param seriesElementNumber
	 * @return long value of Fibonacci series for given element
	 */
	public static long evaluateFib(int seriesElementNumber) {
		long result = 0;
		if (seriesElementNumber <= 0) {
			throw new IllegalArgumentException("Element's number must be a non-negative number!");
		} else if (seriesElementNumber == 1 || seriesElementNumber == 2) {
			return 1;
		} else {
			long previousElement = 1;
			long previousToPreviousElement = 1;

			for (int i = 3; i <= seriesElementNumber; i++) {
				if (result < 0) {
					throw new ResultOutOfRangeException("Result of this operation is out of range");
				}
				else{
				result = previousElement + previousToPreviousElement;
				previousToPreviousElement = previousElement;
				previousElement = result;}
			}
			return result;
		}

	}
}