package com.capgemini.gameoflife;

public class Board {
	private int numberOfColumns;
	private int numberOfRows;

	public Cell[][] getBoardOfCells() {
		return boardOfCells;
	}

	public void setBoardOfCells(Cell[][] boardOfCells) {
		this.boardOfCells = boardOfCells;
	}

	private Cell[][] boardOfCells;

	public int getNumberOfColumns() {
		return numberOfColumns;
	}

	public void setNumberOfColumns(int numberOfColumns) {
		this.numberOfColumns = numberOfColumns;
	}

	public int getNumberOfRows() {
		return numberOfRows;
	}

	public void setNumberOfRows(int numberOfRows) {
		this.numberOfRows = numberOfRows;
	}

	public Board(int numberOfRows, int numberOfColumns) {
		this.numberOfRows = numberOfRows;
		this.numberOfColumns = numberOfColumns;
		boardOfCells = new Cell[numberOfRows][numberOfColumns];

	}

	public void createBoard() {
		for (int i = 0; i < numberOfRows; i++) {
			for (int j = 0; j < numberOfColumns; j++) {
				boardOfCells[i][j] = new Cell(i, j, CellState.DEAD);
			}
		}
	}
	
	public void createInitializedBoard(Cell[][] initialBoard) {
		int numberOfRows=initialBoard.length;
		int numberOfColumns=initialBoard[0].length;
		for (int i = 0; i < numberOfRows; i++) {
			for (int j = 0; j < numberOfColumns; j++) {
				boardOfCells[i][j] = new Cell(i, j, CellState.ALIVE);
			}
		}
	}

}
