package com.capgemini.fraudanalyser;

import java.math.BigDecimal;
import java.time.LocalDateTime;

public class Transaction {
	public Transaction(int userID, long recipientAccount, BigDecimal amountOfMoneyTransferred,
			LocalDateTime dateOfTransfer) {
		super();
		this.userID = userID;
		this.recipientAccount = recipientAccount;
		this.amountOfMoneyTransferred = amountOfMoneyTransferred;
		this.dateOfTransfer = dateOfTransfer;
	}

	public int getUserID() {
		return userID;
	}
	public long getRecipientAccount() {
		return recipientAccount;
	}
	public BigDecimal getAmountOfMoneyTransferred() {
		return amountOfMoneyTransferred;
	}
	public LocalDateTime getDateOfTransfer() {
		return dateOfTransfer;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((amountOfMoneyTransferred == null) ? 0 : amountOfMoneyTransferred.hashCode());
		result = prime * result + ((dateOfTransfer == null) ? 0 : dateOfTransfer.hashCode());
		result = prime * result + (int) (recipientAccount ^ (recipientAccount >>> 32));
		result = prime * result + userID;
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Transaction other = (Transaction) obj;
		if (amountOfMoneyTransferred == null) {
			if (other.amountOfMoneyTransferred != null)
				return false;
		} else if (!amountOfMoneyTransferred.equals(other.amountOfMoneyTransferred))
			return false;
		if (dateOfTransfer == null) {
			if (other.dateOfTransfer != null)
				return false;
		} else if (!dateOfTransfer.equals(other.dateOfTransfer))
			return false;
		if (recipientAccount != other.recipientAccount)
			return false;
		if (userID != other.userID)
			return false;
		return true;
	}

	private final int userID;
	private final long recipientAccount;
	private final BigDecimal amountOfMoneyTransferred;
	private final LocalDateTime dateOfTransfer;

}
